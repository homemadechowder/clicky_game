{"version":3,"sources":["components/Character.js","cards.js","components/Scorekeep.js","components/Banner.js","components/Body.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["cardStyle","base","boxShadow","border","transition","height","width","float","margin","transform","imgStyle","objectFit","Radium","props","style","onClick","shuffle","clicked","id","className","key","value","alt","src","image","cards","url","isClicked","textAlign","ScoreKeep","message","score","hiscore","backgroundImage","marginTop","color","Banner","Body","state","char","setCards","console","log","setState","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","isClickedFlag","check","alert","setTimeout","window","location","reload","Scorekeep","this","map","i","flag","Component","footerStyle","backgroundColor","padding","textStyle","fontSize","Footer","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0891dc4f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Radium from \"radium\";\r\n\r\n\r\n\r\nconst cardStyle = {\r\n    base:{\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.4), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n        border: '10px white solid',\r\n        transition: 'transform .2s',\r\n        height: '200px',\r\n        width: '200px',\r\n        float: 'left',\r\n        margin: '20px',\r\n        \r\n        ':hover':{\r\n            transform: 'scale(1.1)'\r\n        }\r\n    }\r\n}\r\n\r\nconst imgStyle = {\r\n    objectFit: 'cover',\r\n    width: '180px',\r\n    height: '180px'\r\n}\r\n\r\nfunction Character(props) {\r\n  return (\r\n    <div style = {cardStyle.base} onClick={()=>{props.shuffle(); props.clicked(props.id);}}  className=\"card\">\r\n        <img style = {imgStyle} className=\"card-img-top\"key = {props.key} value = {props.value} alt = 'something' src={props.image}></img>     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Radium(Character);","const cards = \r\n[\r\n    {\r\n        id: 0,\r\n        url: 'https://vignette.wikia.nocookie.net/starwars/images/0/01/Hansoloprofile.jpg/revision/latest?cb=20100129155042',\r\n        isClicked: 0\r\n    } , \r\n    {\r\n        id: 1,\r\n        url: 'https://i.pinimg.com/originals/bf/c1/6d/bfc16d60a9470f20b7fdd9d118ab4e56.jpg',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 2,\r\n        url: 'https://i.insider.com/5e32f2a324306a19834af322?width=1100&format=jpeg&auto=webp',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 3,\r\n        url: 'https://vignette.wikia.nocookie.net/starwars/images/3/3e/FACadBane.png/revision/latest/top-crop/width/360/height/360?cb=20170909123958',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 4,\r\n        url: 'https://media.vanityfair.com/photos/5852ca58972218dd20575570/master/pass/rogue-one-darth-vader-02.jpg',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 5,\r\n        url: 'https://pm1.narvii.com/6746/e82b8b64bcb7de57b6f308d5acb35c8afb2a761fv2_hq.jpg',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 6,\r\n        url: 'https://vignette.wikia.nocookie.net/starwars/images/b/bc/KyloRenVFcover-TROS.png/revision/latest?cb=20190605061645',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 7,\r\n        url: 'https://japantoday-asset.scdn3.secure.raxcdn.com/img/store/c4/fd/af42121ff402091772d3f4ae6cb3d0843e82/kirk.jpg',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 8,\r\n        url: 'https://vignette.wikia.nocookie.net/starwars/images/1/15/Luke_Skywalker_Ep_7_SWCT.png/revision/latest?cb=20180731193551',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 9,\r\n        url: 'https://vignette.wikia.nocookie.net/starwars/images/3/37/Mas_Amedda_SWCT.png/revision/latest?cb=20160630051412',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 10,\r\n        url: 'https://i.ytimg.com/vi/3W5KOdNuBlw/maxresdefault.jpg',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 11,\r\n        url: 'https://vignette.wikia.nocookie.net/starwars/images/5/50/Darth_Maul_profile.png/revision/latest?cb=20140209162228',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 12,\r\n        url: 'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/obi-wan-show-1567178968.jpg?crop=0.486xw:0.973xh;0.512xw,0.00340xh&resize=480:*',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 13,\r\n        url: 'https://vignette.wikia.nocookie.net/starwars/images/d/d8/Emperor_Sidious.png/revision/latest?cb=20130620100935',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 14,\r\n        url: 'https://upload.wikimedia.org/wikipedia/en/thumb/a/af/Rey_Star_Wars.png/220px-Rey_Star_Wars.png',\r\n        isClicked: 0\r\n    },\r\n    {\r\n        id: 15,\r\n        url: 'https://www.rspropmasters.com/wp-content/uploads/2018/06/snowtrooper-1.jpg',\r\n        isClicked: 0\r\n    }\r\n    \r\n]\r\n\r\nexport default cards;","import React from 'react';\r\n\r\nconst style = {\r\n    textAlign: 'center',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.4), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    height: '25vh'\r\n}\r\n\r\nfunction ScoreKeep(props){\r\n    \r\n    return(\r\n       <div style = {style} className = \"jumbotron jumbotron-fluid\"> \r\n        <h1>Clicky Game v1.0</h1>\r\n        <h2>{props.message}</h2>\r\n        <h2>Your Score: {props.score} | Highest Record: {props.hiscore}</h2>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default ScoreKeep","import React from 'react';\r\n\r\nconst style = {\r\n    backgroundImage: \"url(https://wallpaperaccess.com/full/11795.jpg)\",\r\n    marginTop: '-20px',\r\n    color: 'white'\r\n}\r\n\r\nfunction Banner(){\r\n    return(\r\n        <div style = {style} className = 'jumbotron'>\r\n            <h1 className=\"display-4\">Clicky Game v1.0</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React , {Component} from 'react';\r\nimport Radium from 'radium';\r\nimport Character from './Character';\r\nimport cards from '../cards';\r\nimport Scorekeep from \"./Scorekeep\";\r\nimport Banner from \"./Banner\";\r\n\r\n\r\nclass Body extends Component{\r\n       \r\n    state = {\r\n        char: cards,\r\n        score: 0,\r\n        hiscore: 0,\r\n    }\r\n    \r\n    \r\n\r\n    setCards = cards =>{\r\n        console.log(\"setting state with : \"+ cards)\r\n        this.setState({char: cards})\r\n    \r\n    }\r\n\r\n        \r\n\r\n    shuffle = () =>{  \r\n        \r\n        var currentIndex = cards.length, temporaryValue, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n      \r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n      \r\n          // And swap it with the current element.\r\n          temporaryValue = cards[currentIndex];\r\n          cards[currentIndex] = cards[randomIndex];\r\n          cards[randomIndex] = temporaryValue;\r\n        }\r\n        \r\n        this.setState({char: cards})\r\n        console.log(cards);\r\n        \r\n\r\n    }\r\n    \r\n    isClickedFlag = (id) =>{\r\n        const check = this.state.char;\r\n        \r\n        if (check[id].isClicked === 0){\r\n            this.setState({score: this.state.score+1})\r\n            this.setState({message: \"You guessed correctly\"})\r\n            check[id].isClicked = 1;\r\n            \r\n            this.setState({char:check})\r\n            \r\n            if(this.state.hiscore <= this.state.score){\r\n                this.setState({hiscore: this.state.hiscore + 1})\r\n\r\n                if(this.state.score === 16){\r\n                    alert(\"You won, refresh?\");\r\n                }\r\n            \r\n            }\r\n        }  \r\n        else {\r\n            this.setState({message: \"You guessed incorrectly\"})\r\n            setTimeout(window.location.reload(), 2000)\r\n        }\r\n        \r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div className = \"wrapper\">\r\n            <Banner />\r\n            <Scorekeep message = {this.state.message} score = {this.state.score} hiscore = {this.state.hiscore}/>\r\n            \r\n            <div className = 'container'>\r\n                <div className = 'row'>                    \r\n                    <div className = 'col-12'>\r\n                        {this.state.char.map((char,i) =>(                    \r\n                            <Character \r\n                            shuffle = {this.shuffle}\r\n                            clicked = {this.isClickedFlag} \r\n                            flag = {char.isClicked} \r\n                            id = {char.id} \r\n                            key = {i} \r\n                            image = {char.url} />                      \r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Radium(Body);","import React from \"react\";\r\n\r\nconst footerStyle = {\r\n    backgroundColor: 'lightblue',\r\n    textAlign: 'center',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.4), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    padding: '20px'\r\n}\r\n\r\nconst textStyle = {\r\n    fontSize: '100%'\r\n}\r\n\r\n// The ...props means, spread all of the passed props onto this element\r\n// That way we don't have to define them all individually\r\nfunction Footer() {\r\n    return(\r\n        <div style = {footerStyle} className = 'footer'>\r\n            <h1 style = {textStyle} >Current Release : v1.0</h1>\r\n            <h1 style = {textStyle} ><i className=\"fab fa-github-square\"></i>homemadechowder</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Body from './components/Body';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n      \n      <Switch>\n        <Route exact path = \"/\" component = {Body}/>\n      </Switch>\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}